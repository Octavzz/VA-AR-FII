{
  "openapi": "3.0.0",
  "info": {
    "description": "An application developed during IP classes, at the Faculty of Computer Science, from UAIC Iasi, in collaboration with prof. dr. Mihai-Alex Moruz. Please force refresh your browser to visualise your Swagger file - CTRL+F5 on Windows, Apple + R or command + R on Mac, F5 on Linux.",
    "version": "1.0.0",
    "title": "Mobile application to orient in a building (with Desktop interface to edit the maps)",
    "license": {
      "name": "MIT GitHub license",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "View Request",
      "description": "Example API for requesting and returning building requests."
    }
  ],
  "paths": {
    "/building": {
      "get": {
        "tags": [
          "View Request"
        ],
        "summary": "Returns buildings' names stored in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Buildings"
            }
          },
          "204": {
            "description": "The server successfully processed the request and is not returning any content.",
            "schema": {
              "$ref": "#/components/schemas/Buildings"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Building MAP operations"
        ],
        "summary": "Insert a new building MAP in database",
        "requestBody": {
          "description": "There is a mock building JSON structure in the repository.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingRequestPostBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/BuildingRequestPostBody"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "patch": {
        "tags": [
          "Building MAP operations"
        ],
        "summary": "Update an existing building MAP in database",
        "requestBody": {
          "description": "There is a mock building JSON structure in the repository.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingRequestPostBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/BuildingRequestPostBody"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/building/{name}": {
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "description": "Get the entire building that is stored in database",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "View Request with parameter"
        ],
        "summary": "Get entire building info with given name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Get the entire building that is stored in database",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/EntireBuilding"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Building request not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Building MAP operations"
        ],
        "summary": "Delete entire building MAP with given name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Delete entire building MAP with given name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/EntireBuilding"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Building request not found."
          }
        }
      }
    },
    "/route/{name}?start={id1}&destination={id2}": {
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "description": "Get a route in the building between two points' IDs",
          "type": "string"
        },
        {
          "name": "id1",
          "in": "path",
          "required": true,
          "description": "Starting point ID.",
          "type": "string"
        },
        {
          "name": "id2",
          "in": "path",
          "required": true,
          "description": "Ending point ID.",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "View Request with parameter"
        ],
        "summary": "Get a route in the building between two points' IDs",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Get a route in the building between two points' IDs",
            "type": "string"
          },
          {
            "name": "id1",
            "in": "path",
            "required": true,
            "description": "Starting point ID.",
            "type": "string"
          },
          {
            "name": "id2",
            "in": "path",
            "required": true,
            "description": "Ending point ID.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/EntireBuilding"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Building request not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BuildingNames": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "BuildingName": {
        "type": "object",
        "properties": {
          "buildingName": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "BuildingRequestPostBody": {
        "type": "object",
        "properties": {
          "buildingName": {
            "type": "string",
            "format": "string"
          },
          "floors": {
            "type": "array",
            "items": {
              "properties": {
                "level": {
                  "type": "integer",
                  "format": "integer"
                },
                "waypoints": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "format": "string"
                      },
                      "markedID": {
                        "type": "integer",
                        "format": "integer"
                      },
                      "tip": {
                        "type": "string",
                        "format": "string"
                      },
                      "neighbors": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "format": "string"
                            },
                            "direction": {
                              "type": "string",
                              "format": "string"
                            }
                          }
                        }
                      },
                      "schedule": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "group": {
                              "type": "string",
                              "format": "string"
                            },
                            "course": {
                              "type": "string",
                              "format": "string"
                            },
                            "dayOfWeek": {
                              "type": "string",
                              "format": "string"
                            },
                            "startTime": {
                              "type": "string",
                              "format": "string"
                            },
                            "finishTime": {
                              "type": "string",
                              "format": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EntireBuilding": {
        "type": "object",
        "properties": {
          "buildingName": {
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  }
}